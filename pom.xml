<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <groupId>dasniko.quarkus</groupId>
    <artifactId>funqy-demo</artifactId>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <compiler-plugin.version>3.8.1</compiler-plugin.version>
        <maven.compiler.parameters>true</maven.compiler.parameters>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <quarkus.platform.artifact-id>quarkus-universe-bom</quarkus.platform.artifact-id>
        <quarkus.platform.group-id>io.quarkus</quarkus.platform.group-id>
        <quarkus.platform.version>1.11.1.Final</quarkus.platform.version>
        <quarkus-plugin.version>1.11.1.Final</quarkus-plugin.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>${quarkus.platform.artifact-id}</artifactId>
                <version>${quarkus.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-funqy-http</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-arc</artifactId>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${quarkus-plugin.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                            <goal>generate-code</goal>
                            <goal>generate-code-tests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler-plugin.version}</version>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>aws</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>io.quarkus</groupId>
                    <artifactId>quarkus-amazon-lambda-http</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>az</id>
            <properties>
                <resources-plugin.version>3.1.0</resources-plugin.version>
                <azure.functions.maven.plugin.version>1.6.0</azure.functions.maven.plugin.version>
                <functionAppName>dasnikoFunqyDemo</functionAppName>
                <functionAppRegion>germanywestcentral</functionAppRegion>
                <functionResourceGroup>java-functions-group</functionResourceGroup>
                <function>funqy</function>
                <stagingDirectory>${project.build.directory}/azure-functions/${functionAppName}</stagingDirectory>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>io.quarkus</groupId>
                    <artifactId>quarkus-azure-functions-http</artifactId>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.quarkus</groupId>
                        <artifactId>quarkus-maven-plugin</artifactId>
                        <version>${quarkus-plugin.version}</version>
                        <configuration>
                            <uberJar>true</uberJar>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- we only use azure plugin to deploy to Azure.
                         The directory structure is set up through various plugins in this pom -->
                    <plugin>
                        <groupId>com.microsoft.azure</groupId>
                        <artifactId>azure-functions-maven-plugin</artifactId>
                        <version>${azure.functions.maven.plugin.version}</version>
                        <configuration>
                            <resourceGroup>${functionResourceGroup}</resourceGroup>
                            <appName>${functionAppName}</appName>
                            <region>${functionAppRegion}</region>
                            <runtime>
                                <javaVersion>8</javaVersion>
                            </runtime>
                            <appSettings>
                                <!-- Run Azure Function from package file by default -->
                                <property>
                                    <name>WEBSITE_RUN_FROM_PACKAGE</name>
                                    <value>1</value>
                                </property>
                                <property>
                                    <name>FUNCTIONS_EXTENSION_VERSION</name>
                                    <value>~2</value>
                                </property>
                                <property>
                                    <name>FUNCTIONS_WORKER_RUNTIME</name>
                                    <value>java</value>
                                </property>
                            </appSettings>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>${resources-plugin.version}</version>
                        <executions>
                            <!-- add azure required json files to Azure staging directory -->
                            <execution>
                                <id>copy-base-azure-config</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <overwrite>true</overwrite>
                                    <outputDirectory>${stagingDirectory}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.basedir}/azure-config</directory>
                                            <includes>
                                                <include>host.json</include>
                                                <include>local.settings.json</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <!-- copy unpacked function.json into Azure staging directory -->
                            <execution>
                                <id>copy-function-json</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <overwrite>true</overwrite>
                                    <outputDirectory>${stagingDirectory}/quarkus</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.basedir}/azure-config</directory>
                                            <filtering>true</filtering>
                                            <includes>
                                                <include>function.json</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <!-- copy the uber-jar into Azure staging directory -->
                            <execution>
                                <id>copy-uberjar</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <overwrite>true</overwrite>
                                    <outputDirectory>${stagingDirectory}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}</directory>
                                            <includes>
                                                <include>${project.artifactId}-${project.version}-runner.jar</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <properties>
                <quarkus.package.type>native</quarkus.package.type>
            </properties>
        </profile>
    </profiles>
</project>
